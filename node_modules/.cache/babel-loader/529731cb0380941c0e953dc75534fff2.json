{"ast":null,"code":"import React from\"react\";import videojs from\"video.js\";import\"video.js/dist/video-js.css\";import{jsx as _jsx}from\"react/jsx-runtime\";export var Player=function Player(props){var videoRef=React.useRef(null);// This seperate functional component fixes the removal of the videoelement\n// from the DOM when calling the dispose() method on a player\nvar VideoPlayer=function VideoPlayer(props){return/*#__PURE__*/_jsx(\"div\",{\"data-vjs-player\":true,children:/*#__PURE__*/_jsx(\"video\",{ref:videoRef,className:\"video-js vjs-big-play-centered\"})});};React.useEffect(function(){var options={fill:true,fluid:true,preload:\"auto\",mute:true,nativeControlsForTouch:false,playsinline:true,controlBar:{timeDivider:false,durationDisplay:false,remainingTimeDisplay:false,customControlSpacer:true,pictureInPictureToggle:false,captionsButton:false,fullscreenToggle:true,subsCapsButton:false},html5:{hls:{withCredentials:true}},sources:[{src:\"https://bitdash-a.akamaihd.net/content/sintel/hls/playlist.m3u8\"}]};var videoElement=videoRef.current;var player;if(videoElement){player=videojs(videoElement,options,function(){console.log(\"player is ready\");});}return function(){if(player){player.dispose();}};},[]);return/*#__PURE__*/_jsx(VideoPlayer,{});};export default Player;","map":{"version":3,"sources":["/home/entri/Workspace/tryouts/hls-test/src/Player.jsx"],"names":["React","videojs","Player","props","videoRef","useRef","VideoPlayer","useEffect","options","fill","fluid","preload","mute","nativeControlsForTouch","playsinline","controlBar","timeDivider","durationDisplay","remainingTimeDisplay","customControlSpacer","pictureInPictureToggle","captionsButton","fullscreenToggle","subsCapsButton","html5","hls","withCredentials","sources","src","videoElement","current","player","console","log","dispose"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,OAAP,KAAoB,UAApB,CACA,MAAO,4BAAP,C,2CAEA,MAAO,IAAMC,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,CAACC,KAAD,CAAW,CAC/B,GAAMC,CAAAA,QAAQ,CAAGJ,KAAK,CAACK,MAAN,CAAa,IAAb,CAAjB,CAGA;AACA;AACA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACH,KAAD,qBAClB,YAAK,sBAAL,uBACE,cAAO,GAAG,CAAEC,QAAZ,CAAsB,SAAS,CAAC,gCAAhC,EADF,EADkB,EAApB,CAMAJ,KAAK,CAACO,SAAN,CAAgB,UAAM,CACpB,GAAMC,CAAAA,OAAO,CAAG,CACdC,IAAI,CAAE,IADQ,CAEdC,KAAK,CAAE,IAFO,CAGdC,OAAO,CAAE,MAHK,CAIdC,IAAI,CAAE,IAJQ,CAKdC,sBAAsB,CAAE,KALV,CAMdC,WAAW,CAAE,IANC,CAOdC,UAAU,CAAE,CACVC,WAAW,CAAE,KADH,CAEVC,eAAe,CAAE,KAFP,CAGVC,oBAAoB,CAAE,KAHZ,CAIVC,mBAAmB,CAAE,IAJX,CAKVC,sBAAsB,CAAE,KALd,CAMVC,cAAc,CAAE,KANN,CAOVC,gBAAgB,CAAE,IAPR,CAQVC,cAAc,CAAE,KARN,CAPE,CAiBdC,KAAK,CAAE,CACLC,GAAG,CAAE,CACHC,eAAe,CAAE,IADd,CADA,CAjBO,CAsBdC,OAAO,CAAE,CACP,CACEC,GAAG,CAAE,iEADP,CADO,CAtBK,CAAhB,CA4BA,GAAMC,CAAAA,YAAY,CAAGzB,QAAQ,CAAC0B,OAA9B,CACA,GAAIC,CAAAA,MAAJ,CACA,GAAIF,YAAJ,CAAkB,CAChBE,MAAM,CAAG9B,OAAO,CAAC4B,YAAD,CAAerB,OAAf,CAAwB,UAAM,CAC5CwB,OAAO,CAACC,GAAR,CAAY,iBAAZ,EACD,CAFe,CAAhB,CAGD,CACD,MAAO,WAAM,CACX,GAAIF,MAAJ,CAAY,CACVA,MAAM,CAACG,OAAP,GACD,CACF,CAJD,CAKD,CAzCD,CAyCG,EAzCH,EA2CA,mBAAO,KAAC,WAAD,IAAP,CACD,CAxDM,CAyDP,cAAehC,CAAAA,MAAf","sourcesContent":["import React from \"react\";\nimport videojs from \"video.js\";\nimport \"video.js/dist/video-js.css\";\n\nexport const Player = (props) => {\n  const videoRef = React.useRef(null);\n  \n\n  // This seperate functional component fixes the removal of the videoelement\n  // from the DOM when calling the dispose() method on a player\n  const VideoPlayer = (props) => (\n    <div data-vjs-player>\n      <video ref={videoRef} className=\"video-js vjs-big-play-centered\" />\n    </div>\n  );\n\n  React.useEffect(() => {\n    const options = {\n      fill: true,\n      fluid: true,\n      preload: \"auto\",\n      mute: true,\n      nativeControlsForTouch: false, \n      playsinline: true, \n      controlBar: {\n        timeDivider: false,\n        durationDisplay: false,\n        remainingTimeDisplay: false,\n        customControlSpacer: true,\n        pictureInPictureToggle: false,\n        captionsButton: false,\n        fullscreenToggle: true,\n        subsCapsButton: false,\n      },\n      html5: {\n        hls: {\n          withCredentials: true,\n        },\n      },\n      sources: [\n        {\n          src: \"https://bitdash-a.akamaihd.net/content/sintel/hls/playlist.m3u8\",\n        },\n      ],\n    };\n    const videoElement = videoRef.current;\n    let player;\n    if (videoElement) {\n      player = videojs(videoElement, options, () => {\n        console.log(\"player is ready\");\n      });\n    }\n    return () => {\n      if (player) {\n        player.dispose();\n      }\n    };\n  }, []);\n\n  return <VideoPlayer />;\n};\nexport default Player;\n"]},"metadata":{},"sourceType":"module"}